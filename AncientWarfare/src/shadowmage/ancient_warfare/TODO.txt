TODO before first alpha release:
read: http://accidentalnoise.sourceforge.net/minecraftworlds.html
http://mrl.nyu.edu/~perlin/noise/


GENERAL
* add some null checks to container/guis...mostly there, but probably still missing a few
* start working on complexes....


TESTING
* verify weighting for levels in loot generator
* test structure weighting
* test underground buildings
* test submerged code
* test that static air rule works properly
* test world-gen export

TEMPLATES
* change template extension--enable it in config properties, or...manually set?


SCANNER
        

STRUCTURE BUILDING
* remove builder load/save from gameData...--it isn't used


WORLD GEN STUFF
* handle structure spawning in cave dimensions (test for hasSky? and dissallow non-dungeon structures?)
* check overrides for structure for biome settings....
* check nearby chunks in generatedMap for structure bb's, make sure bb's will not overwrite...
            should probably be called in attemptGenerateAt<surface/subsurface>


STRUCTURE EDITOR
* validate struct before transmit to save
* add reject message display if attempting to open a locked structure...
* add method to 'lock' structure when editing, so no other player could edit the same struct
            and release when no longer in use..so it can be built, etc...
* add dirty flag to editor, so it won't retransmit template unless it has been edited


COMPLEXES
* THDT


SURVIVAL MODE STRUCTURE BUILDING
* create drafting workstation
* single-use item scanner--cannot add to world gen, only add to survival/creative mode and export to ruins
* make sure survival ticked builder will not clear or level.  struct BB needs validated for clear before being built
* builder item will carry an md5 of original structure, compare before starting construction..?
* use survival flag for survival drafting table structureSelection...(from structureClientInfo in client store)


BASIC DRAFTING STATION
* selection screen w/only survival eligible buildings available
* works much like drafting station from catmod (e.g. input box, compile blocks/resources into a finished item)
* create single-use builder item for output--stores struct data in NBT (basically, just a name and struct md5)....
* create single use scanner item for survival mode (item is consumed on successful scan/export)


ADVANCED DRAFTING STATION (editor)
* THDT


RESEARCH
* THDT
- vehicles can be built with different base components, which help determine the outcome characteristics
        of the vehicle.  Such as using raw wood, fine wood, processed wood, ironshod wood, or iron channel
        as base construction materials.  Each grade of material will help determine the base stats of the
        vehicle (health, range modifier, damage done on hit, speed/weight), as well as secondary stats (i.e.
        number of upgrade slots in the vehicle and upgrade points available for customization during construction)
        add 'imbued' versions of these materials, each level of imbue will decrease some of the drawbacks for using 
        higher-tier materials.  Imbued versions are created by combining various materials with the regular version
        --such as combining with redstone for a t1 imbue, glowstone for a t2 imbue, both for t3 imbue.  Highest
        level imbue will require glowstone, redstone, and ender pearls.

        


TWEAKS/OPTIMIZATION
* alter gen algorithm to account for rejection frequency on larger buildings (multiple retries for them?)
* optimize clearing code to not include inside bounds of structure
* optimize struct distance checking code, no longer needs to spiral, can use a double nested for/loop
* optimize, optimize, optimize.  Do massive timing/checking for generation times.
* change creative instant builder to be...not so instant.  break it up into ticks to smooth built-times to sub 10ms/tick
* figure out better way to handle ruins import (current is convert on run, manual copy and re-run)
* remove workaround for chest-overwrite-crash (test if it crashes on other entities as well?) 
* some ruins structures (one, jungle throne) appears offset -1Y
* editor GUI has some really ugly code to render chars....


/*****************************************************************************************/
public class MyWorldData extends WorldSavedData 
{

final static String key = "my.unique.string";

// Fields containing your data here

public static MyWorldData forWorld(World world) 
    {
    // Retrieves the MyWorldData instance for the given world, creating it if necessary
    MapStorage storage = world.perWorldStorage;
    MyWorldData result = (MyWorldData)storage.loadData(MyWorldData.class, key);
    if (result == null) 
        {
        result = new MyWorldData();
        storage.setData(key, result);
        }
    return result;
    }
}
/*****************************************************************************************/


********************* DONE STUFF *************************
* BB rendering working...
* default structure exporting...
* inventoried blocks for door, bed, slabs, double slabs
* test door coding for inventoried builder
* builder blocks + link builder to structure....
* TEST FREAKING BUILDER SAVE AND LOADING--IT FAILS--NEEDS WORK--NAOW IT WORKS!
* bb rendering for all other structure builders...
* cleanup bb rendering code, its freaking ugly
* rewrite BB rendering to use partialTickTime from event
* clear button on survival builder
* survival builder blockList rendering
* biome exclusion list in template
* biome specific list in template
* add preservedBlocksList to template, blockRule, parsing....
* ruins .tml importer
* ruins .tml exporter
* clean up blockRule internal parsing to use new safeParse code
* rewrite exporter to use ProcessedStructure
* add settings to allow ruins export
* restructure folders...its a mess
* parse swap rules
* add swap rules functionality to structure and builder
* export swap rules
* add default 0 rule to ruins template importer
* make sure all structs have default 0 rule after loaded
* fix ruins exporter structure naming
* site preparation (clearing, leveling)
* add preserved block testing into builder placement code
* handle no block rule
* add bb getters and renders for leveling and clearing areas...
* verify block rule randomization works as intended
* make sure hard air zero rule is in place after loading or importing, and prior to exporting
* fix leveling and clearing bb renders
* verify and fix structure clearance code
* fix block percentage chance placement
* restructure builders to a more unified system for checking block validity
* handle mob spawners in import, rules, and export 
* restructure lookups for rules to use maps by ruleNumber
* handle building rules for ruins special spawn stuff
* fix parsing of spaces ( use .trim() )
* built structures map --store in nbt?
* add resourceList stuff to template--so others can denote custom resource lists to construct a building
* leveling code appears to be off on some axis for ruins imported structures, fixed...
* stop exporter from exporting 0-0 data (stop resourceList from counting it in the first place)
* move builder block outside of the cleared area, or ensure builder block is placed after clearing is done--for creative ticked builder
* cleanup bug where overwriting a chest will crash the client (render tick error)(notify on update, or mark blocks dirty)
        this one is apparently going to be tought to fix...instant builder may be borked--workaround with deferred block placement list
* fix validTargetBlocks export
* figure out decent structure selection algorithm
* switch over to using a word_gen_template file? (stores name, weight, value for each world-gen struct, also store
        complex' information for the future)
* add canSpawnInLiquid -- uses preserveWater / preserveLava
* site validation
* above ground height selection algorithm
* hook generatedStructures map up to gametracker for save/load
* fix validTargetBlocks import/default inclusion...
* invert level weighting for chest loot
* fix vehicleRule rule parsing to use safeParse methods
* add maxSubmergedDepth
* handle max submerged level during generation, for lava and water
* underground height selection algorithm
* underground generation
* verify that preservedBlocks works as intended
* move over to unified bounding-box system...it is now all set in AWStructure, as static methods
* adjust leveling, correct for yOffset
* convert ruins block metadata to northfacing on import---NFC why, or what is going on...
* fix ruins x,z coord inversion on import
* fix ruins vertical offset being...off
* biome validation
* chest loot support
* fix temp builder to clear if no valid structure is found ??
* add inventory blocks for *water, *lava, *redstone torch(fix), *repeater, plants
* finish isPlant
* fully implement overrides for creative builder (as far as possible without NPCs/Vehicles/Gates/Teams/Etc)
* add gates to blockRules
* work out chest/loot system
* fix bb rendering...again....
* test block swapping
* verify world gen map loads properly
* find better method to sort available structures per-biome, to reduce rejected structures
* finish reworking structure selector, needs weighting stuff done
* handle multi-dimensions (make them mod-global, and not per-structure(ease of handling)?)
* write default values to world gen config if no file is found
* move and rename world-gen config file
* finish adding things to lootgenerator
* add percentage of an empty slot to lootgenerator
* test biome inclusion/exclusion
* add default templates, and add them to export list
* add BB render to scanner
/****************************************FIRST TEST RELEASE****************************************/
* store template lines in structure
* break template lines into byte chunks to send to client
* send template byte chunks to client for entire structure
* composite byte chunks into structure on client side
* figure out multi-line text box...
* remove unused fields (chunkDistance, chunkAttempts)
/********** 02-11-13 **********/
* auto-forced chunkloading for builder blocks
* remove name= line from templates, only use internally in structure/code (set from filename, upon load)
* on load, validate struct name for uniqueness
* ensure that builders will not crash/corrupt world if they are loaded with a template
      that has changed after they were fist placed.  save an md5 of the file into the processedStructure
      save that md5 out to the builder.  when builder is loaded, check saved md5 versus the passed-in structure
* add counting/ref mechanism for structures, to know which are editable, disallow editing if locked/in-use
* don't close GUI on save, only on discard
* add shift/invert option to config and items--global (does not effect scanners, due to client-server config differences, could probably synch config from server-client onLogin)
* advanced setup gui, set values on init according to existing values in container
* add clear/reset button to GUI, in case someone wants to ditch a scan
* fix ticked builder block available in creative inventory
* add more concise chat message as to what is going on when it is used (step _ of 4)
* direct builder has some issues with BB not clearing on client-side when the struct is cleared...
* direct builder scanning BB not rendering...
* remove creative flag--all will be available
* exporter now can convert entire structure to lines (uses this before writing)....
* scanner now sets template lines into freshly scanned buildings (for use of edit prior to save)...
* add advanced button to enable editing prior to first save
        --it will technically export with include
        --and then force-open the editor GUI with the just
        --exported structure...
* clean up various bugs from the days work at work... pt1
* clean up file transmission, it leaves 'null' lines at the end of the file (bugs from the day, pt2)
* clean up directBuilder scan BB rendering and item-clearing (bugs from the day, pt3)
* clean up a few chunkloading related bugs (bugs from the day, pt4)
* add builderTE/block onRemove code to release tickets...
/********** 02-12-13 **********/
* enforce air-zero rule (hard-coded, non-replaceable)
* rework guiContainerAdvanced to include fully custom button and text-box handling
/********** 02-13-13 **********/
* rework worldgen/structures slightly to allow for overrides from world-gen file to globally effect structures 
        as/after they are loaded (functions as a complete overrride without touching the orig structures values)
* add save ability to world-gen config file--should allow for in-game addition of structures (values are all final however, cannot be edited)
* add leveling/clearing/overhang overrides to worldgenstructentry
* move generated stucture maps into world.perWorldStorage (see notes...)
* enable value/weight settings for structure export
* enable add-to-world-gen for newly created structures (w/ given world-gen values)...
* check openEditors list instead of edit-flag



/********** 02-14-13 **********/
/********** 02-15-13 **********/
/********** 02-16-13 **********/
/********** 02-17-13 **********/
/********** 02-18-13 **********/
/********** 02-19-13 **********/