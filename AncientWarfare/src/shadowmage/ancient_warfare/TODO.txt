THIS WEEKEND
* upkeep system
* town-hall block will have slots to store food items
* town-hall gui will show information on how many (loaded/active)NPCs are currently assigned to draw upkeep from it
* npcs will keep an 'upkeep timer' -- essentially a hunger timer.
    when depleted, npcs will seek their designated upkeep site to restock (if it has supplies)
        if site has food
            decrement food, reset upkeep timer to value relative to value of the food consumed

GENERAL
* partially destroyable blocks ? (hold destruction status as meta-data?)
* move upgrades/ammo/armor over to self-registering class with an underlying array instead of the map they currently use        
* grenades ?
* land-mines ?
* move over to traditional dungeonLootChests...perhaps with an additional manual list param or addt'l rank...
* add logs to block-data manager (for rotation values...currently unmapped)

VEHICLES    
* alpha blend vehicle if set to not render--looks like dookie and blanks out the trajectory line--kind of useless...
* vehicle container needs stack limiting on shift-click

SOLDIERS
* create definitive medic and combat engineer types (healer/repair vehicles)
* create officer types (com, gen)(can fight/drive--higher hp/dmg/accuracy, better equip, MUCH more expensive)
* inter-soldier comms (more commanders yelling orders to soldiers)(broadcast handler in place)
* vehicle riders need some work (turning the vehicle base towards targets)

NPCS
* create AI objectives
    Stay Near Commander
    Select Commander (constantly-run objective, e.g. does the 'run' in the 'update priority' tick?)  
* ladder movement handling needs some attention (they get stuck moving across ladders)
* expand waypoint navigator with the following functions:
    town-hall/vault -- for npc upkeep
    advanced item routing waypoints for use with couriers (keep stocked, keep emptied,??)
* add objective icon rendering to npcs (toggle via Settings) -- .... NFC on this, would require server->client sync on stuff
* decide on method for NPC upkeep
* add NPC upkeep costs to INpcType/NpcTypeBase/indiv. types
        
GUI FRAMEWORK
* put quaded texture rendering someplace central...
* add an itemSlot element (not inventory slot...a client-side only slot that displays a static stack)

TESTING
* test structure stuff extensively

PATHFINDING
* still need better handling of when target is intentionally a non-pathable block (such as many work-points)(teleport npc?)
* for non-attack targets, hook in the 'teleport' system.
* recalc of path towards moving target is still too aggressive
* add fence-gate use to soldiers/pathfinding (hook into canUseDoors system)
* pathfinding involving fences is still fucked (need to instead of denying blocks, set them to extremely high move-costs)

WORLD GEN STUFF
* handle structure spawning in cave dimensions (test for hasSky? and disallow non-dungeon structures?)


CIVICS
* need objective icons and rendering
* need inventory status bar
* need work status bar
* bounds size testing on placement is one off (display is correct, test is wrong)

WORKSITES
* most civics probably need chunk-loaders to prevent them from trying to access unloaded areas.
* teleport worker to position if he can't path appropriately?      
        
FARMS
* jungle tree farm needs to check for cocoa blocks?
* chicken farm needs to occasionally collect eggs on the ground
* netherstalk farm needs testing
* tree farms need testing

MINE
* alternative mine-patterns
* restructure mine into an 'internal' template.
    internal map will be 64*64 (max mine size)
        smaller mines will work outwards from the center of the template.
* it tries to harvest water..need a isClearable(id, top) check...
* need isFillable(id, top)
* need isResource(id, top)
* need to stop workers from wandering during level-changes (rework level change code to not flag as noWork unless really has noWork)

COMPLEXES
* features--
        -min width
        -max widht
        -min length
        -max length
        -amount of terrain leveling to do (will level or fill-in and replace top-blocks)
        -list of structures w/min spacing around the structure
                -min spacing around the structure
                -max # of that structure
                -min # of that structure
        -list of acceptable biomes (or unnaceptable biomes)
        -# of structures in a 'city block' (min/max) (determines road frequency)
        -size of a 'city block' (min/max)
        -layout type (grid, staggered grid, haphazard)
        -wall types
        -team override for structures within
        -road width
        -ability to specify a basic template??
        -will have full biome-block swapping in-place for all structures AND walls
-- all structures will have fill-under/backfill below them, no matter the amount of terraforming
-- walls wil be placed slightly inside of terrain leveling bounds
-- outer leveling bounds will use a stepped approach, out to a certain radius/height...

SURVIVAL MODE STRUCTURE BUILDING
* create drafting workstation
* single-use item scanner--cannot add to world gen, only add to survival/creative mode
* make sure survival ticked builder will not clear or level.  struct BB needs validated for clear before being built
* use survival flag for survival drafting table structureSelection...(from structureClientInfo in client store)

BASIC DRAFTING STATION
* selection screen w/only survival eligible buildings available
* works much like drafting station from catmod (e.g. input box, compile blocks/resources into a finished item)
* create single-use builder item for output--stores struct data in NBT (basically, just a name and struct md5)....
* create single use scanner item for survival mode (item is consumed on successful scan/export)

ADVANCED DRAFTING STATION (editor)
* THDT

RESEARCH
* vehicle research system (initial only t0(rough) mats and t0(rough) vehicle variants)
* vehicle upgrade research (0 known until researched)
* materials research (2 known, rough quality wood/iron, other tiers/materials must be researched)
* npc research system (0 known until researched)
* civics research system (0 known until researched)

CRAFTING
    VEHICLE CRAFTING
        --at least 2 sizes of crafting area
        --will be multiblock structures that will render the in-progress vehicle being built
                will slowly add pieces over construction duration until finished constructing.
    NPC CRAFTING
    AMMO CRAFTING
        --simple processing station with a overList on the far left, innerList on left, autoList in mid, 
            and craft input grid on the right.  auto_list will fill with results based on what is in the grid
            other lists are manual select.  will have a 'start' button, and take time to make ammo.  will continue
            making same type until materials run out
    UPGRADE AND ARMOR CRAFTING
 
 
/************************************************DONE/OPTI*************************************************/
 
TEAM CONTROL GUI
 
TEMPLATES

SCANNER

STRUCTURE BUILDING

STRUCTURE EDITOR
* add selection ability (clipboard/copy/paste)

TWEAKS/OPTIMIZATION
* alter gen algorithm to account for rejection frequency on larger buildings (multiple retries for them?)
* optimize clearing code to not include inside bounds of structure
* optimize struct distance checking code, no longer needs to spiral, can use a double nested for/loop
* optimize, optimize, optimize.  Do massive timing/checking for generation times.
* change creative instant builder to be...not so instant.  break it up into ticks to smooth built-times to sub 10ms/tick
* figure out better way to handle ruins import (current is convert on run, manual copy and re-run)
* remove workaround for chest-overwrite-crash (test if it crashes on other entities as well?) 
* some ruins structures (one, jungle throne) appears offset -1Y
* editor GUI has some really ugly code to render chars....
* custom block placement code for creative/survival builders (set server block, manually relay to client--should 
        decrease overall network used from vanilla MC resending entire chunks..)


********************* DONE STUFF *************************  

/********** 05-01-13 **********/
* npc depository must be able to be a chest-cart, or mine-cart with chest (or other entity with IInventory?)
        dynamically scan area.. worldServer has a getTEsInInBox method, also check chest-carts/mine-carts
* remove inner-points from tree/mine, replace with global inner-work-point tracking
* add player-target broadcasting to npcs
* add on-dimension change code to npcs to clear waypoints on transport
* add more farm types -- cactus/reed/mushrooms
/********** 05-02-13 **********/
* fix a few bugs reported -- hopefully
    furnace/deployer/dropper not rotating properly in templates
    vehicles ammo type not carried over properly in templates
    vehicle armor/upgrade slots > 1 qty
* add animal-farm civic types.  need testing. need mooshroom and cow-milking farms
* add loot-on-ground pickup ability to all NPCs -- not working, needs investigation. 
/********** 05-03-13 **********/
* clear target trackers on dimension change
* remove tooltips...they're fucked anyway

/********** 05-04-13 **********/
/********** 05-05-13 **********/
/********** 05-06-13 **********/
/********** 05-07-13 **********/
/********** 05-08-13 **********/
